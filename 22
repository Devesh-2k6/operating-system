#include <stdio.h>
#define MAX 100

void bestFit(int blockSizes[], int blockCount, int processSizes[], int processCount) {
    int allocation[MAX];

    for (int i = 0; i < processCount; i++) allocation[i] = -1;

    for (int i = 0; i < processCount; i++) {
        int bestIndex = -1;

        for (int j = 0; j < blockCount; j++) {
            if (blockSizes[j] >= processSizes[i]) {
                if (bestIndex == -1 || blockSizes[j] < blockSizes[bestIndex]) {
                    bestIndex = j;
                }
            }
        }

        if (bestIndex != -1) {
            allocation[i] = bestIndex;
            blockSizes[bestIndex] -= processSizes[i];
        }
    }

    printf("\nProcess No.\tProcess Size\tBlock No.\n");
    for (int i = 0; i < processCount; i++) {
        printf(" %d\t\t%d\t\t", i + 1, processSizes[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1);
        else
            printf("Not Allocated\n");
    }
}

int main() {
    int blockSizes[MAX], processSizes[MAX], blockCount, processCount;

    printf("Enter the number of blocks: ");
    scanf("%d", &blockCount);
    printf("Enter the sizes of the blocks: ");
    for (int i = 0; i < blockCount; i++) scanf("%d", &blockSizes[i]);

    printf("Enter the number of processes: ");
    scanf("%d", &processCount);
    printf("Enter the sizes of the processes: ");
    for (int i = 0; i < processCount; i++) scanf("%d", &processSizes[i]);

    bestFit(blockSizes, blockCount, processSizes, processCount);

    return 0;
}
